package com.moh.form;

import com.moh.DBConnection.DatabaseMoh;
import dataValidation.Validation;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

public class AdminRmvStaff extends javax.swing.JPanel {

    DatabaseMoh Db = new DatabaseMoh();
    Validation encrypt = new Validation();

    public AdminRmvStaff() throws Exception {
        initComponents();

        lblEmailValidation2.setVisible(false);
        lblReqType.setVisible(false);

        cmbUserType.disable();
        txtUserEmail.disable();
        txtUserName.disable();
        btnUpdate.setVisible(false);
        myButton1.setVisible(false);
      

        String type;
        cmbUserType.addItem("Select Type");
        try {
            ResultSet AB1 = Db.getData("SELECT typeName FROM staff_type ORDER BY id ASC");
            while (AB1.next()) {
                type = String.valueOf(AB1.getString("typeName"));
                cmbUserType.addItem(type);
            }

        } catch (Exception e) {
            System.out.println(e);
        }

        
        updateTable();

    }
    
    public void updateTable(){
          int Id = -1;
        String name;
        String email;
        String Role;
        String tbldata[] = new String[4];

        try {
            ResultSet AB = Db.getData("SELECT s_ID, staff.full_name, typeName, staff.email FROM staff INNER JOIN staff_type ON staff.type_ID = staff_type.id WHERE hide = 0 ORDER BY s_ID ASC");
            DefaultTableModel tblModle = (DefaultTableModel) tblStaffDetails.getModel();
            while (AB.next()) {

                Id = Integer.valueOf(AB.getString("s_ID"));
                name = String.valueOf(AB.getString("full_name"));
                email = String.valueOf(AB.getString("email"));
                Role = String.valueOf(AB.getString("typeName"));

                tbldata[0] = Integer.toString(Id);
                tbldata[1] = name;
                tbldata[2] = Role;
                tbldata[3] = email;

                //System.out.println(Id +" "+name +" "+email +" "+Role);
                tblModle.addRow(tbldata);

            }

        } catch (Exception e) {
            System.out.println(e);
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myButton1 = new button.MyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStaffDetails = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        myButton2 = new button.MyButton();
        txtUserEmail = new javax.swing.JTextField();
        lblEmailValidation2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbUserType = new javax.swing.JComboBox<>();
        txtUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnUpdate = new button.MyButton();
        lblReqType = new javax.swing.JLabel();

        setBackground(new java.awt.Color(247, 247, 247));

        myButton1.setBorder(null);
        myButton1.setForeground(new java.awt.Color(255, 255, 255));
        myButton1.setText("REMOVE");
        myButton1.setBorderColor(new java.awt.Color(102, 0, 0));
        myButton1.setColor(new java.awt.Color(214, 17, 32));
        myButton1.setColorClick(new java.awt.Color(190, 122, 122));
        myButton1.setColorOver(new java.awt.Color(250, 160, 160));
        myButton1.setFocusable(false);
        myButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        myButton1.setMaximumSize(new java.awt.Dimension(84, 26));
        myButton1.setMinimumSize(new java.awt.Dimension(84, 26));
        myButton1.setRadius(40);
        myButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton1ActionPerformed(evt);
            }
        });

        tblStaffDetails.setBackground(new java.awt.Color(225, 226, 226));
        tblStaffDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "POSITION", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblStaffDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStaffDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStaffDetails);
        if (tblStaffDetails.getColumnModel().getColumnCount() > 0) {
            tblStaffDetails.getColumnModel().getColumn(0).setMinWidth(35);
            tblStaffDetails.getColumnModel().getColumn(0).setPreferredWidth(35);
            tblStaffDetails.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        jTextField1.setBackground(new java.awt.Color(225, 226, 226));

        myButton2.setForeground(new java.awt.Color(255, 255, 255));
        myButton2.setText("search");
        myButton2.setColor(new java.awt.Color(51, 51, 255));
        myButton2.setColorClick(new java.awt.Color(102, 102, 255));
        myButton2.setColorOver(new java.awt.Color(51, 51, 255));
        myButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        myButton2.setMaximumSize(new java.awt.Dimension(84, 26));
        myButton2.setMinimumSize(new java.awt.Dimension(84, 26));
        myButton2.setRadius(30);

        txtUserEmail.setBackground(new java.awt.Color(225, 226, 226));
        txtUserEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserEmailKeyPressed(evt);
            }
        });

        lblEmailValidation2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEmailValidation2.setForeground(new java.awt.Color(204, 0, 0));
        lblEmailValidation2.setText("Invalid Email*");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("email");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("user type");

        cmbUserType.setBackground(new java.awt.Color(225, 226, 226));
        cmbUserType.setForeground(new java.awt.Color(0, 0, 0));
        cmbUserType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbUserTypeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbUserTypeMousePressed(evt);
            }
        });
        cmbUserType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbUserTypeKeyPressed(evt);
            }
        });

        txtUserName.setBackground(new java.awt.Color(225, 226, 226));
        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserNameKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("name");

        btnUpdate.setBorder(null);
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.setColor(new java.awt.Color(78, 203, 74));
        btnUpdate.setFocusable(false);
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setMaximumSize(new java.awt.Dimension(84, 26));
        btnUpdate.setMinimumSize(new java.awt.Dimension(84, 26));
        btnUpdate.setRadius(40);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblReqType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblReqType.setForeground(new java.awt.Color(204, 0, 0));
        lblReqType.setText("requird*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUserEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblReqType, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEmailValidation2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(167, 167, 167)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(myButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(myButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(lblReqType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblEmailValidation2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserEmailKeyPressed
        lblEmailValidation2.setVisible(false);

    }//GEN-LAST:event_txtUserEmailKeyPressed

    private void cmbUserTypeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbUserTypeMousePressed

    }//GEN-LAST:event_cmbUserTypeMousePressed

    private void txtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyPressed

    }//GEN-LAST:event_txtUserNameKeyPressed

    private void tblStaffDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStaffDetailsMouseClicked

        cmbUserType.enable();
        txtUserEmail.enable();
        txtUserName.enable();
         btnUpdate.setVisible(true);
        myButton1.setVisible(true);
        
        DefaultTableModel tblModle = (DefaultTableModel) tblStaffDetails.getModel();

        String U_Id = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 0).toString();
        String Name = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 1).toString();
        String Role = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 2).toString();
        String Email = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 3).toString();
        int roleIndex = -1;

        //System.out.println(U_Id);
        try {
            ResultSet AB2 = Db.getData("SELECT type_ID FROM staff WHERE s_ID  = '" + Integer.valueOf(U_Id) + "'");
            while (AB2.next()) {
                roleIndex = AB2.getInt("type_ID");

            }
            //System.out.println(roleIndex);

        } catch (Exception e) {
            System.out.println(e);
        }

        txtUserName.setText(Name);
        txtUserEmail.setText(Email);
        cmbUserType.setSelectedIndex(roleIndex);


    }//GEN-LAST:event_tblStaffDetailsMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int userTYpe = cmbUserType.getSelectedIndex();
        String uName = txtUserName.getText();
        String uEmail = txtUserEmail.getText();

        DefaultTableModel tblModle = (DefaultTableModel) tblStaffDetails.getModel();

        String stID = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 0).toString();

        if (userTYpe == 0) {
            lblReqType.setVisible(true);
        } else {
            try {
                Db.putData("UPDATE staff set full_name ='" + uName + "',type_ID = '" + userTYpe + "', email='" + uEmail + "' WHERE s_ID='" + Integer.valueOf(stID) + "'");

            } catch (Exception ex) {
                System.out.println(ex);

            }
        }

        JOptionPane.showMessageDialog(null, "Updated Succesfully");

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cmbUserTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbUserTypeKeyPressed

    }//GEN-LAST:event_cmbUserTypeKeyPressed

    private void cmbUserTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbUserTypeMouseClicked
        lblReqType.setVisible(false);
    }//GEN-LAST:event_cmbUserTypeMouseClicked

    private void myButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton1ActionPerformed
        DefaultTableModel tblModle = (DefaultTableModel) tblStaffDetails.getModel();

        String stID = tblModle.getValueAt(tblStaffDetails.getSelectedRow(), 0).toString();

        try {
            Db.putData("UPDATE staff set hide = 1 WHERE s_ID = '" + Integer.valueOf(stID) + "'");
            JOptionPane.showMessageDialog(null, "Removed Succesfully");
            tblModle.setRowCount(0);
            updateTable();

        } catch (Exception ex) {
            System.out.println(ex);

        }
    }//GEN-LAST:event_myButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.MyButton btnUpdate;
    private javax.swing.JComboBox<String> cmbUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblEmailValidation2;
    private javax.swing.JLabel lblReqType;
    private button.MyButton myButton1;
    private button.MyButton myButton2;
    private javax.swing.JTable tblStaffDetails;
    private javax.swing.JTextField txtUserEmail;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
